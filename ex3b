package com.mycompany.ex1acaesar;



import javax.crypto.Cipher;



import javax.crypto.KeyGenerator;

import javax.crypto.SecretKey;

import java.util.Base64;

import java.util.Scanner;

public class ex3b {

 // Generate an AES Key

 public static SecretKey generateKey() throws Exception {

 KeyGenerator keyGen = KeyGenerator.getInstance("AES");

 keyGen.init(128); // AES-128 bit key

 return keyGen.generateKey();

 }

 // Encrypt method

 public static String encrypt(String plainText, SecretKey key) throws Exception {

 Cipher cipher = Cipher.getInstance("AES");

 cipher.init(Cipher.ENCRYPT_MODE, key);

 byte[] encryptedBytes = cipher.doFinal(plainText.getBytes());

 return Base64.getEncoder().encodeToString(encryptedBytes);

 }

 // Decrypt method

 public static String decrypt(String encryptedText, SecretKey key) throws Exception {

 Cipher cipher = Cipher.getInstance("AES");

 cipher.init(Cipher.DECRYPT_MODE, key);

 byte[] decryptedBytes = cipher.doFinal(Base64.getDecoder().decode(encryptedText));

 return new String(decryptedBytes);

 }

 public static void main(String[] args) {

 try {

 Scanner scanner = new Scanner(System.in);

 // User Input

 System.out.print("Enter the Aadhar Number: ");

 String aadharNumber = scanner.nextLine().replaceAll("\\s", ""); // Remove spac 

 // Aadhar number validation (must be exactly 12 digits)



 if (!aadharNumber.matches("\\d{12}")) {



 System.out.println("Invalid Aadhar Number");

 scanner.close();

 return;

 }

 // Formatting Aadhar number for display

 String formattedAadhar = aadharNumber.substring(0, 4) + " " +

 aadharNumber.substring(4, 8) + " " +

 aadharNumber.substring(8, 12);

 // Generate AES Key

 SecretKey key = generateKey();

 // Encrypt and Decrypt

 String encryptedText = encrypt(formattedAadhar, key);

 String decryptedText = decrypt(encryptedText, key);

 // Output

 System.out.println("\n=== AES Encryption & Decryption ===");

 System.out.println("Plain Text: " + formattedAadhar);

 System.out.println("Encrypted Text: " + encryptedText);

 System.out.println("Decrypted Text: " + decryptedText);

 scanner.close();

 } catch (Exception e) {

 e.printStackTrace();

 }

 }

}
